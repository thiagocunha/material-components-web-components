{"version":3,"file":"mwc-checkbox.js","sourceRoot":"","sources":["src/mwc-checkbox.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;EAeE;AACF,OAAO,EAAC,IAAI,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAA6C,MAAM,oCAAoC,CAAC;AACjJ,OAAO,EAAC,KAAK,EAAC,MAAM,uBAAuB,CAAC;AAC5C,OAAO,EAAC,MAAM,EAAC,MAAM,0CAA0C,CAAC;AAChE,OAAO,qBAAqB,MAAM,kCAAkC,CAAC;AAsBrE,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,WAAW;IADzC;;QAUE,YAAO,GAAG,KAAK,CAAC;QAGhB,kBAAa,GAAG,KAAK,CAAC;QAGtB,aAAQ,GAAG,KAAK,CAAC;QAGjB,UAAK,GAAG,EAAE,CAAA;QAEA,uBAAkB,GAA8B,qBAAqB,CAAC;QAsDxE,mBAAc,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;YACpD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QACpC,CAAC,CAAA;QAEO,yBAAoB,GAAG,GAAG,EAAE;YAClC,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;QAC1C,CAAC,CAAA;IACH,CAAC;IA3DC,WAAW;QACT,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7B,CAAC;IAES,aAAa;QACrB,yBACK,KAAK,CAAC,aAAa,EAAE,IACxB,gBAAgB,EAAE,GAAG,EAAE;gBACrB,OAAO,IAAI,CAAC,WAAW,CAAC;YAC1B,CAAC,EACD,WAAW,EAAE,GAAG,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC3B,CAAC,EACD,eAAe,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EACvC,eAAe,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EACzC,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAC7B,gBAAgB,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EACjD,wBAAwB,EAAE,CAAC,QAAiB,EAAE,EAAE;gBAC9C,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACvC,CAAC,IACF;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,OAAO,IAAI,CAAA;QACP,IAAI,CAAC,WAAW,EAAE;iDACuB,IAAI,CAAC,oBAAoB,cAAc,MAAM,EAAE;;;yBAGvE,IAAI,CAAC,cAAc;gCACZ,IAAI,CAAC,aAAa;0BACxB,IAAI,CAAC,OAAO;wBACd,IAAI,CAAC,KAAK;;;;;;;;;;aAUrB,CAAC;IACZ,CAAC;CAWF,CAAA;AAhFC;IADC,KAAK,CAAC,eAAe,CAAC;yCACmB;AAG1C;IADC,KAAK,CAAC,OAAO,CAAC;6CAC0B;AAGzC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;yCACV;AAGhB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;+CACJ;AAGtB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;0CACT;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;uCACf;AAlBC,QAAQ;IADpB,aAAa,CAAC,cAAqB,CAAC;GACxB,QAAQ,CAmFpB;SAnFY,QAAQ","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {html, FormElement, customElement, property, query, Foundation, Adapter, HTMLElementWithRipple} from '@material/mwc-base/form-element.js';\nimport {style} from './mwc-checkbox-css.js';\nimport {ripple} from '@material/mwc-ripple/ripple-directive.js';\nimport MDCCheckboxFoundation from '@material/checkbox/foundation.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-checkbox': Checkbox;\n  }\n}\n\nexport interface CheckboxFoundation extends Foundation {\n  isChecked(): boolean;\n  setChecked(value: boolean): void;\n  setDisabled(disabled: boolean): void;\n  handleAnimationEnd(): void;\n  handleChange(): void\n}\n\nexport declare var CheckboxFoundation: {\n  prototype: CheckboxFoundation;\n  new (adapter: Adapter): CheckboxFoundation;\n}\n\n@customElement('mwc-checkbox' as any)\nexport class Checkbox extends FormElement {\n\n  @query('.mdc-checkbox')\n  protected mdcRoot!: HTMLElementWithRipple;\n\n  @query('input')\n  protected formElement!: HTMLInputElement;\n\n  @property({type: Boolean})\n  checked = false;\n\n  @property({type: Boolean})\n  indeterminate = false;\n\n  @property({type: Boolean})\n  disabled = false;\n\n  @property({type: String})\n  value = ''\n\n  protected mdcFoundationClass: typeof CheckboxFoundation = MDCCheckboxFoundation;\n\n  protected mdcFoundation!: CheckboxFoundation;\n\n  renderStyle() {\n    return style;\n  }\n\n  get ripple() {\n    return this.mdcRoot.ripple;\n  }\n\n  protected createAdapter(): Adapter {\n    return {\n      ...super.createAdapter(),\n      getNativeControl: () => {\n        return this.formElement;\n      },\n      forceLayout: () => {\n        this.mdcRoot.offsetWidth;\n      },\n      isAttachedToDOM: () => this.isConnected,\n      isIndeterminate: () => this.indeterminate,\n      isChecked: () => this.checked,\n      hasNativeControl: () => Boolean(this.formElement),\n      setNativeControlDisabled: (disabled: boolean) => {\n        this.formElement.disabled = disabled;\n      }\n    }\n  }\n\n  render() {\n    console.log('render', this.checked);\n    return html`\n      ${this.renderStyle()}\n      <div class=\"mdc-checkbox\" @animationend=\"${this._animationEndHandler}\" .ripple=\"${ripple()}\">\n        <input type=\"checkbox\"\n              class=\"mdc-checkbox__native-control\"\n              @change=\"${this._changeHandler}\"\n              .indeterminate=\"${this.indeterminate}\"\n              .checked=\"${this.checked}\"\n              .value=\"${this.value}\">\n        <div class=\"mdc-checkbox__background\">\n          <svg class=\"mdc-checkbox__checkmark\"\n              viewBox=\"0 0 24 24\">\n            <path class=\"mdc-checkbox__checkmark-path\"\n                  fill=\"none\"\n                  d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n          </svg>\n          <div class=\"mdc-checkbox__mixedmark\"></div>\n        </div>\n      </div>`;\n  }\n\n  private _changeHandler = () => {\n    this.checked = this.formElement.checked;\n    this.indeterminate = this.formElement.indeterminate;\n    this.mdcFoundation.handleChange();\n  }\n\n  private _animationEndHandler = () => {\n    this.mdcFoundation.handleAnimationEnd();\n  }\n}"]}