{"version":3,"file":"selection-controller.js","sourceRoot":"","sources":["src/selection-controller.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {Radio} from './mwc-radio.js';\n\n/**\n * Unique symbol for marking roots\n */\nconst selectionController = Symbol('selection controller');\n\nclass SelectionSet {\n  selected: Radio | null = null;\n  ordered: Radio[] | null = null;\n  readonly set = new Set<Radio>();\n}\n\nexport class SelectionController {\n  private sets: {[name: string]: SelectionSet} = {};\n\n  private focusedSet: SelectionSet | null = null;\n\n  private mouseIsDown = false;\n\n  private updating = false;\n\n  static getController(element: HTMLElement) {\n    const root = element.getRootNode();\n    if (!root[selectionController]) {\n      root[selectionController] = new SelectionController(root);\n    }\n    return root[selectionController] as SelectionController;\n  }\n\n  constructor(element: Node) {\n    element.addEventListener('keydown', (e: Event) => this.keyDownHandler(e as KeyboardEvent));\n    element.addEventListener('mousedown', () => this.mousedownHandler());\n    element.addEventListener('mouseup', () => this.mouseupHandler());\n  }\n\n  protected keyDownHandler(e: KeyboardEvent) {\n    if (!(e.target instanceof Radio)) {\n      return;\n    }\n    const element = e.target;\n    if (!this.has(element)) {\n      return;\n    }\n    if (e.key == 'ArrowRight' || e.key == 'ArrowDown') {\n      this.next(element);\n    } else if (e.key == 'ArrowLeft' || e.key == 'ArrowUp') {\n      this.previous(element);\n    }\n  }\n\n  protected mousedownHandler() {\n    this.mouseIsDown = true;\n  }\n\n  protected mouseupHandler() {\n    this.mouseIsDown = false;\n  }\n\n  has(element: Radio) {\n    const set = this.getSet(element.name);\n    return set.set.has(element);\n  }\n\n  previous(element: Radio) {\n    const order = this.getOrdered(element);\n    const i = order.indexOf(element);\n    this.select(order[i-1] || order[order.length-1]);\n  }\n\n  next(element: Radio) {\n    const order = this.getOrdered(element);\n    const i = order.indexOf(element);\n    this.select(order[i+1] || order[0]);\n  }\n\n  select(element: Radio) {\n    element.click();\n  }\n\n  /**\n   * Helps to track the focused selection group and if it changes, focuses\n   * the selected item in the group. This matches native radio button behavior.\n   */\n  focus(element: Radio) {\n    // Only manage focus state when using keyboard\n    if (this.mouseIsDown) {\n      return;\n    }\n    const set = this.getSet(element.name);\n    const currentFocusedSet = this.focusedSet;\n    this.focusedSet = set;\n    if (currentFocusedSet != set && set.selected && set.selected != element) {\n      set.selected!.focusNative();\n    }\n  }\n\n  getOrdered(element: Radio) {\n    const set = this.getSet(element.name);\n    if (!set.ordered) {\n      set.ordered = Array.from(set.set);\n      set.ordered.sort((a, b) =>\n        a.compareDocumentPosition(b) == Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0\n      );\n    }\n    return set.ordered;\n  }\n\n  getSet(name: string) {\n    if (!this.sets[name]) {\n      this.sets[name] = new SelectionSet();\n    }\n    return this.sets[name];\n  }\n\n  register(element) {\n    const set = this.getSet(element.name);\n    set.set.add(element);\n    set.ordered = null;\n  }\n\n  unregister(element) {\n    const set = this.getSet(element.name);\n    set.set.delete(element);\n    set.ordered = null;\n    if (set.selected == element) {\n      set.selected = null;\n    }\n  }\n\n  update(element) {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    if (element.checked) {\n      const set = this.getSet(element.name);\n      for (const e of set.set) {\n        e.checked = (e == element);\n      }\n      set.selected = element;\n    }\n    this.updating = false;\n  }\n}\n"]}