/**
@license
Copyright 2018 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
import { Radio } from './mwc-radio.js';
declare class SelectionSet {
    selected: Radio | null;
    ordered: Radio[] | null;
    readonly set: Set<Radio>;
}
export declare class SelectionController {
    private sets;
    private focusedSet;
    private mouseIsDown;
    private updating;
    static getController(element: HTMLElement): SelectionController;
    constructor(element: Node);
    protected keyDownHandler(e: KeyboardEvent): void;
    protected mousedownHandler(): void;
    protected mouseupHandler(): void;
    has(element: Radio): boolean;
    previous(element: Radio): void;
    next(element: Radio): void;
    select(element: Radio): void;
    /**
     * Helps to track the focused selection group and if it changes, focuses
     * the selected item in the group. This matches native radio button behavior.
     */
    focus(element: Radio): void;
    getOrdered(element: Radio): Radio[];
    getSet(name: string): SelectionSet;
    register(element: any): void;
    unregister(element: any): void;
    update(element: any): void;
}
export {};
