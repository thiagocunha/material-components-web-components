{"version":3,"file":"mwc-radio.js","sourceRoot":"","sources":["src/mwc-radio.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {FormElement, query, customElement, Foundation, Adapter, property, html, observer, HTMLElementWithRipple} from '@material/mwc-base/form-element.js';\nimport {style} from './mwc-radio-css.js';\nimport {SelectionController} from './selection-controller.js';\nimport {ripple} from '@material/mwc-ripple/ripple-directive.js';\nimport MDCRadioFoundation from '@material/radio/foundation.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-radio': Radio;\n  }\n}\n\nexport interface RadioFoundation extends Foundation {\n  isChecked(): boolean;\n  setChecked(checked: boolean): void;\n  isDisabled(): boolean;\n  setDisabled(disabled: boolean): void;\n  getValue(): string;\n  setValue(value: string): void;\n}\n\nexport declare var RadioFoundation: {\n  prototype: RadioFoundation;\n  new (adapter: Adapter): RadioFoundation;\n}\n\n@customElement('mwc-radio' as any)\nexport class Radio extends FormElement {\n\n  @query('.mdc-radio')\n  protected mdcRoot!: HTMLElementWithRipple;\n\n  @query('input')\n  protected formElement!: HTMLInputElement\n\n  @property({type: Boolean})\n  @observer(function(this: Radio, checked: boolean) {\n    this.mdcFoundation.setChecked(checked);\n  })\n  checked = false;\n\n  @property({type: Boolean})\n  @observer(function(this: Radio, disabled: boolean) {\n    this.mdcFoundation.setDisabled(disabled);\n  })\n  disabled = false;\n\n  @property({type: String})\n  @observer(function(this: Radio, value: string) {\n    this.mdcFoundation.setValue(value);\n  })\n  value = '';\n\n  @property({type: String})\n  name = '';\n\n  protected mdcFoundationClass: typeof RadioFoundation = MDCRadioFoundation;\n\n  protected mdcFoundation!: RadioFoundation;\n\n  private _selectionController: SelectionController | null = null;\n\n  constructor() {\n    super();\n    // Selection Controller is only needed for native ShadowDOM\n    if (!window['ShadyDOM'] || !window['ShadyDOM']['inUse']) {\n      this._selectionController = SelectionController.getController(this);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this._selectionController) {\n      this._selectionController.register(this);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this._selectionController) {\n      this._selectionController.unregister(this);\n    }\n  }\n\n  focusNative() {\n    this.formElement.focus();\n  }\n\n  renderStyle() {\n    return style;\n  }\n\n  get ripple() {\n    return this.mdcRoot.ripple;\n  }\n\n  protected createAdapter(): Adapter {\n    return {\n      ...super.createAdapter(),\n      getNativeControl: () => {\n        return this.formElement;\n      }\n    };\n  }\n\n  private _changeHandler = () => {\n    this.checked = this.formElement.checked;\n    if (this._selectionController) {\n      this._selectionController.update(this);\n    }\n  }\n\n  private _focusHandler = () => {\n    if (this._selectionController) {\n      this._selectionController.focus(this);\n    }\n  }\n\n  private _clickHandler = () => {\n    // Firefox has weird behavior with radios if they are not focused\n    this.formElement.focus();\n  }\n\n  render() {\n    return html`\n      ${this.renderStyle()}\n      <div class=\"mdc-radio\" .ripple=\"${ripple()}\">\n        <input class=\"mdc-radio__native-control\" type=\"radio\" name=\"${this.name}\" .checked=\"${this.checked}\" .value=\"${this.value}\"\n        @change=\"${this._changeHandler}\"\n        @focus=\"${this._focusHandler}\"\n        @click=\"${this._clickHandler}\">\n        <div class=\"mdc-radio__background\">\n          <div class=\"mdc-radio__outer-circle\"></div>\n          <div class=\"mdc-radio__inner-circle\"></div>\n        </div>\n      </div>`;\n  }\n\n  firstUpdated() {\n    super.firstUpdated();\n    if (this._selectionController) {\n      this._selectionController.update(this);\n    }\n  }\n}"]}